generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model dishes_BY {
  id                  Int       @id @default(autoincrement())
  food_name           String
  includes            String
  spicy               Boolean
  vegetarian          Boolean
  vegan               Boolean
  protein             Decimal?  @default(0.00)
  fats                Decimal?  @default(0.00)
  carbohydrates       Decimal?  @default(0.00)
  amino_acids         String?   @default("Гістыдын, Ізалейцын, Лейцын")
  food_portion        Decimal?  @default(0.00)
  cost                Decimal?  @default(0.00)
  imagePath           String
  favouredByUser      UsersDishes[] @relation("UserFavouteDish")
  meal                DishesMeals[] @relation("DishMealType")
  dishTypeId          Int?
  dishType            DishTypes? @relation(fields: [dishTypeId], references: [ID])
  inCafe              DishCafe[]  @relation("DishCafe")
  orders              DishesByOrders[]  @relation("DishesOrders")
}

model people_and_food {
  id                  Int       @id @default(autoincrement())
  article_title       String    @default("Плануем...")
  article_text        String    @default("У хуткім часе будуць даданыя новыя асобы. Мы працуем над гэтым.")
  article_image_path  String    @default("/Gordon_Ramsay_cooking.jpg")
  articleList_seeing  Boolean   @default(true)
  mainImagePath       String    @default("/no_image1.jpg")
  mainTitle           String    @default("Загаловак артыкула")
  shortTitle          String    @default("Кароткі запіс")
  firstText           String    @default("Ўводзіны да артыкула")
  personalImagePath   String?   @default("/no_image1.jpg")
  personalName        String?   @default("John")
  personalSurname     String?   @default("Doe")
  birthDay            String?   @default("May 18th 1995")
  birthTown           String?   @default("New York")
  birthCountry        String?   @default("United States")
  birthdayDate        String?   @default("18.05.1995")
  personalStatus      String?   @default("World Wild Web Personal Example, Real Person (possibly)")
  imagePaths          String    @default("/no_image1.jpg;/no_image1.jpg;/no_image1.jpg")
  mainText            String    @default("This text is temporary! Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nam non enim sint ducimus, dolores molestias reprehenderit? Atque facere autem, ipsa aliquam rerum, voluptatum nemo laudantium quisquam at molestias est sapiente.")
  createdAt           DateTime  @default(now())
  published           Boolean   @default(false)
}

model Users {
  id                  Int       @id @default(autoincrement())
  firstName           String
  lastName            String
  nickName            String?
  userPhoto           String?
  email               String    @unique
  password            String
  sessionId           String?   @unique
  resetToken          String?   @unique
  resetTokenExpiry    DateTime?
  customSets          CustomSets?
  favouriteDish       UsersDishes[] @relation("UserFavouteDish")
  orders              Orders[]  @relation("UserToOrders")
}

model CustomSets {
  id                  Int       @id @default(autoincrement())
  spicy               Boolean   @default(false)
  vegetarian          Boolean   @default(false)
  vegan               Boolean   @default(false)
  minCalory           Int       @default(1800)
  maxCalory           Int       @default(2500)
  language            String    @default("by")
  pageTheme           String    @default("light")
  brandColor          String    @default("lime")
  fontFamily          String    @default("Consolas, monospace")
  fontSize            String    @default("10px")
  fontVolume          String    @default("fontWeight: normal, fontStyle: italic")
  userId              Int       @unique
  user                Users     @relation(fields: [userId], references: [id])
}

model AdminUsers {
  ID                  Int       @id @default(autoincrement())
  Name                String
  Surname             String
  Email               String    @unique
  EmailConfirmed      Boolean   @default(false)
  Telephone           String?
  Role                String
  SentCode            String?
  Photo               String    @default("")
  Language            String
  Theme               String    @default("light")
  SessionId           String?   @unique
  Password            String
  SecretWord          String    @unique
  SecretWordUsed      Boolean   @default(false)
  ResetToken          String?   @unique
  ResetTokenExpiry    DateTime?
}

model UsersDishes {
  userID              Int
  dishID              Int
  users               Users     @relation("UserFavouteDish", fields: [userID], references: [id])
  dishes              dishes_BY @relation("UserFavouteDish", fields: [dishID], references: [id])

  @@id([userID, dishID])
  @@map("users_dishes")
}

model MealTypes {
  ID                  Int       @id @default(autoincrement())
  Name                String    @unique
  Dish                DishesMeals[] @relation("DishMealType")
}

model DishesMeals {
  dishID              Int
  mealID              Int
  dishes              dishes_BY @relation("DishMealType", fields: [dishID], references: [id])
  meals               MealTypes @relation("DishMealType", fields: [mealID], references: [ID])

  @@id([dishID, mealID])
  @@map("dishes_meals")
}

model DishTypes {
  ID                  Int       @id @default(autoincrement())
  Name                String    @unique
  Dishes              dishes_BY[]
}

model Cafes {
  ID                  Int         @id @default(autoincrement())
  cafeName            String      @unique
  openHours           String
  city                String
  street              String
  country             String
  phone               String
  latitude            Decimal?
  longitude           Decimal?
  SRId                Int         @default(4326)
  hasDish             DishCafe[]  @relation("DishCafe")
  orders              Orders[]    @relation("CafeToOrders")
}

model DishCafe {
  dishID              Int
  cafeID              Int
  dishAvailable       Boolean     @default(true)
  dishes              dishes_BY   @relation("DishCafe", fields: [dishID], references: [id])
  cafes               Cafes       @relation("DishCafe", fields: [cafeID], references: [ID])

  @@id([dishID, cafeID])
  @@map("dishes_cafes")
}

model Orders {
  ID                  Int         @id @default(autoincrement())
  orderNumber         Int         @unique
  userID              Int
  cafeID              Int
  sentTime            DateTime
  readyStatus         Boolean     @default(false)
  phone               String
  comment             String      @default("")

  user                Users       @relation("UserToOrders", fields: [userID], references: [id])
  cafe                Cafes       @relation("CafeToOrders", fields: [cafeID], references: [ID])

  dishes              DishesByOrders[]  @relation("DishesOrders")
}

model DishesByOrders {
  dishID              Int
  orderID             Int
  dishes              dishes_BY   @relation("DishesOrders", fields: [dishID], references: [id])
  orders              Orders      @relation("DishesOrders", fields: [orderID], references: [ID])

  @@id([dishID, orderID])
  @@map("dishes_orders")
}